#!/usr/bin/env ruby

def get_version(filename)
  buffer = File.open(filename, "r") {|f| f.read()}
  if buffer =~ /(\"?version\"?)(\s*[:=]\s*)\"(.*?)\"/ 
    return $3
  end
end

def replace_version(filename, string)
  buffer = File.open(filename, "r") {|f| f.read()}
  buffer.gsub!(/(\"?version\"?)(\s*[:=]\s*)\"(.*?)\"/, "\\1\\2\"#{string}\"")
  File.open(filename, "w") {|f| f.write(buffer)}
end

def get_mtime(filename)
  stat = File::Stat::new(filename)
  return stat.mtime.to_i
end

def wait_update(filename)
  mtime = get_mtime(filename)

  while get_mtime(filename) <= mtime do
    print "."
    sleep 2
  end
  sleep 1
end

################################################################

if ARGV.length <= 0
  old_version = get_version "app/package.json"

  puts "curent version is '#{old_version}'."
  exit ((old_version =~ /debug$/) ? 0 : 1)

else
  new_version = ARGV[0]
  replace_version "app/package.json", new_version
  replace_version "app/src/namenote.js", new_version

  wait_update("app/dist/bundle-desktop.js")
  exit 0
end




