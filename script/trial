#!/usr/bin/env ruby
require 'fileutils'


def get_trial(filename)
  buffer = File.open(filename, "r") {|f| f.read()}
  if buffer =~ /(this.trial) = (\w+)/
    if $2 == "true"
      return "true"
    end
  end
  return "false"
end

def replace_trial(filename, string)
  buffer = File.open(filename, "r") {|f| f.read()}

  buffer.gsub!(/(this.trial) = (\w+)/, "\\1 = #{string}")
  File.open(filename, "w") {|f| f.write(buffer)}
end

def get_mtime(filename)
  stat = File::Stat::new(filename)
  return stat.mtime.to_i
end

def wait_update(filename)
  mtime = get_mtime(filename)

  while get_mtime(filename) <= mtime do
    print "."
    sleep 2
  end
  sleep 1
end

################################################################

if ARGV.length <= 0
  trial = get_trial "app/src/namenote.js"
  
  puts "current trial is '#{trial}'."
  exit ((trial == "true") ? 0 : 1)

else
  value = (ARGV[0].match(/true/i)) ? "true" : "false"
  replace_trial "app/src/namenote.js", value

  wait_update("app/dist/bundle-desktop.js")
  exit 0
end

